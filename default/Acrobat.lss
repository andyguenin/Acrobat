
Acrobat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011c  00800100  00000e5e  00000ef2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080021c  0080021c  0000100e  2**0
                  ALLOC
  3 .debug_aranges 00000140  00000000  00000000  0000100e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000023a  00000000  00000000  0000114e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000196d  00000000  00000000  00001388  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e06  00000000  00000000  00002cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000fd2  00000000  00000000  00003afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b0  00000000  00000000  00004ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e8  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008ca  00000000  00000000  00005068  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  70:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  74:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  7c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  80:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  84:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  88:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  8c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  90:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  94:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  98:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  9c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	12 e0       	ldi	r17, 0x02	; 2
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	ee e5       	ldi	r30, 0x5E	; 94
  c0:	fe e0       	ldi	r31, 0x0E	; 14
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <.do_copy_data_start>

000000c4 <.do_copy_data_loop>:
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0

000000c8 <.do_copy_data_start>:
  c8:	ac 31       	cpi	r26, 0x1C	; 28
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <.do_copy_data_loop>

000000ce <__do_clear_bss>:
  ce:	12 e0       	ldi	r17, 0x02	; 2
  d0:	ac e1       	ldi	r26, 0x1C	; 28
  d2:	b2 e0       	ldi	r27, 0x02	; 2
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a8 32       	cpi	r26, 0x28	; 40
  da:	b1 07       	cpc	r27, r17
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	0e 94 81 00 	call	0x102	; 0x102 <main>
  e2:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <_exit>

000000e6 <__bad_interrupt>:
  e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <init>:



void init()
{
	m_clockdivide(0);
  ea:	e1 e6       	ldi	r30, 0x61	; 97
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 e8       	ldi	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
  f2:	10 82       	st	Z, r1
	m_disableJTAG();
  f4:	85 bf       	out	0x35, r24	; 53
  f6:	85 bf       	out	0x35, r24	; 53

	movement_init();
  f8:	0e 94 76 01 	call	0x2ec	; 0x2ec <movement_init>
	sensor_init();
  fc:	0e 94 af 01 	call	0x35e	; 0x35e <sensor_init>
}
 100:	08 95       	ret

00000102 <main>:
int b_front = 10;
int b_back = 10;
void init(void);

int main()
{
 102:	4f 92       	push	r4
 104:	5f 92       	push	r5
 106:	6f 92       	push	r6
 108:	7f 92       	push	r7
 10a:	8f 92       	push	r8
 10c:	9f 92       	push	r9
 10e:	af 92       	push	r10
 110:	bf 92       	push	r11
 112:	cf 92       	push	r12
 114:	df 92       	push	r13
 116:	ef 92       	push	r14
 118:	ff 92       	push	r15
 11a:	0f 93       	push	r16
 11c:	1f 93       	push	r17
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
	
	init();
 122:	0e 94 75 00 	call	0xea	; 0xea <init>
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 12a:	40 e9       	ldi	r20, 0x90	; 144
 12c:	51 e0       	ldi	r21, 0x01	; 1
 12e:	0a c0       	rjmp	.+20     	; 0x144 <main+0x42>
 130:	fa 01       	movw	r30, r20
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <main+0x30>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 136:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 138:	d9 f7       	brne	.-10     	; 0x130 <main+0x2e>
	
	WAIT(3);
 13a:	2f 5f       	subi	r18, 0xFF	; 255
 13c:	3f 4f       	sbci	r19, 0xFF	; 255
 13e:	23 30       	cpi	r18, 0x03	; 3
 140:	31 05       	cpc	r19, r1
 142:	19 f0       	breq	.+6      	; 0x14a <main+0x48>
 144:	80 e1       	ldi	r24, 0x10	; 16
 146:	97 e2       	ldi	r25, 0x27	; 39
 148:	f3 cf       	rjmp	.-26     	; 0x130 <main+0x2e>
	get_ADC_values(&accel_init, &gyro_init);
 14a:	86 e2       	ldi	r24, 0x26	; 38
 14c:	92 e0       	ldi	r25, 0x02	; 2
 14e:	6c e1       	ldi	r22, 0x1C	; 28
 150:	72 e0       	ldi	r23, 0x02	; 2
 152:	0e 94 ce 01 	call	0x39c	; 0x39c <get_ADC_values>
	//accel_init -= 10;
	m_red(ON);
 156:	6e 9a       	sbi	0x0d, 6	; 13
 158:	76 98       	cbi	0x0e, 6	; 14

	while(1)
	{
		get_ADC_values(&accel, &gyro);
 15a:	8e e1       	ldi	r24, 0x1E	; 30
 15c:	92 e0       	ldi	r25, 0x02	; 2
 15e:	60 e2       	ldi	r22, 0x20	; 32
 160:	72 e0       	ldi	r23, 0x02	; 2
 162:	0e 94 ce 01 	call	0x39c	; 0x39c <get_ADC_values>
		int gyro_diff = gyro - gyro_init;
 166:	c0 90 20 02 	lds	r12, 0x0220
 16a:	d0 90 21 02 	lds	r13, 0x0221
 16e:	40 90 1c 02 	lds	r4, 0x021C
 172:	50 90 1d 02 	lds	r5, 0x021D
		int accel_diff = accel - accel_init;
 176:	00 91 1e 02 	lds	r16, 0x021E
 17a:	10 91 1f 02 	lds	r17, 0x021F
 17e:	c0 91 26 02 	lds	r28, 0x0226
 182:	d0 91 27 02 	lds	r29, 0x0227
 186:	38 01       	movw	r6, r16
 188:	6c 1a       	sub	r6, r28
 18a:	7d 0a       	sbc	r7, r29
	//	if((sumErr + accel_diff >= sumErr && accel_diff >= 0) || (sumErr + accel_diff <= sumErr && accel_diff <= 0))
	//		sumErr += accel_diff;
		sumErr -= (accel_diff)/1000.0;
 18c:	b3 01       	movw	r22, r6
 18e:	88 27       	eor	r24, r24
 190:	77 fd       	sbrc	r23, 7
 192:	80 95       	com	r24
 194:	98 2f       	mov	r25, r24
 196:	0e 94 81 04 	call	0x902	; 0x902 <__floatsisf>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	4a e7       	ldi	r20, 0x7A	; 122
 1a0:	54 ec       	ldi	r21, 0xC4	; 196
 1a2:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__divsf3>
 1a6:	20 91 22 02 	lds	r18, 0x0222
 1aa:	30 91 23 02 	lds	r19, 0x0223
 1ae:	40 91 24 02 	lds	r20, 0x0224
 1b2:	50 91 25 02 	lds	r21, 0x0225
 1b6:	0e 94 a8 03 	call	0x750	; 0x750 <__addsf3>
 1ba:	9b 01       	movw	r18, r22
 1bc:	ac 01       	movw	r20, r24
 1be:	60 93 22 02 	sts	0x0222, r22
 1c2:	70 93 23 02 	sts	0x0223, r23
 1c6:	80 93 24 02 	sts	0x0224, r24
 1ca:	90 93 25 02 	sts	0x0225, r25

		int p,i,d, c;

		if(accel<accel_init)
 1ce:	0c 17       	cp	r16, r28
 1d0:	1d 07       	cpc	r17, r29
 1d2:	ac f4       	brge	.+42     	; 0x1fe <main+0xfc>
		{
			p = -pidc_f[0];
 1d4:	80 91 00 01 	lds	r24, 0x0100
 1d8:	90 91 01 01 	lds	r25, 0x0101
 1dc:	ee 24       	eor	r14, r14
 1de:	ff 24       	eor	r15, r15
 1e0:	e8 1a       	sub	r14, r24
 1e2:	f9 0a       	sbc	r15, r25
			i = pidc_f[1];
 1e4:	80 90 02 01 	lds	r8, 0x0102
 1e8:	90 90 03 01 	lds	r9, 0x0103
			d = pidc_f[2];
 1ec:	60 91 04 01 	lds	r22, 0x0104
 1f0:	70 91 05 01 	lds	r23, 0x0105
			c = pidc_f[3];
 1f4:	a0 90 06 01 	lds	r10, 0x0106
 1f8:	b0 90 07 01 	lds	r11, 0x0107
 1fc:	14 c0       	rjmp	.+40     	; 0x226 <main+0x124>
		}
		else
		{
			p = -pidc_b[0];
 1fe:	80 91 08 01 	lds	r24, 0x0108
 202:	90 91 09 01 	lds	r25, 0x0109
 206:	ee 24       	eor	r14, r14
 208:	ff 24       	eor	r15, r15
 20a:	e8 1a       	sub	r14, r24
 20c:	f9 0a       	sbc	r15, r25
			i = pidc_b[1];
 20e:	80 90 0a 01 	lds	r8, 0x010A
 212:	90 90 0b 01 	lds	r9, 0x010B
			d = pidc_b[2];
 216:	60 91 0c 01 	lds	r22, 0x010C
 21a:	70 91 0d 01 	lds	r23, 0x010D
			c = pidc_b[3];
 21e:	a0 90 0e 01 	lds	r10, 0x010E
 222:	b0 90 0f 01 	lds	r11, 0x010F
		}

		if(accel < accel_init + b_back && accel > accel_init - b_front)
 226:	80 91 12 01 	lds	r24, 0x0112
 22a:	90 91 13 01 	lds	r25, 0x0113
 22e:	8c 0f       	add	r24, r28
 230:	9d 1f       	adc	r25, r29
 232:	08 17       	cp	r16, r24
 234:	19 07       	cpc	r17, r25
 236:	5c f4       	brge	.+22     	; 0x24e <main+0x14c>
 238:	80 91 10 01 	lds	r24, 0x0110
 23c:	90 91 11 01 	lds	r25, 0x0111
 240:	c8 1b       	sub	r28, r24
 242:	d9 0b       	sbc	r29, r25
 244:	c0 17       	cp	r28, r16
 246:	d1 07       	cpc	r29, r17
 248:	14 f4       	brge	.+4      	; 0x24e <main+0x14c>
 24a:	ee 24       	eor	r14, r14
 24c:	ff 24       	eor	r15, r15
		{
			p = 0;
		}

		int control = p * accel_diff + i * ((int)(sumErr)) + d * gyro_diff;
		set_speed(control/c);
 24e:	c4 18       	sub	r12, r4
 250:	d5 08       	sbc	r13, r5
 252:	6c 9d       	mul	r22, r12
 254:	80 01       	movw	r16, r0
 256:	6d 9d       	mul	r22, r13
 258:	10 0d       	add	r17, r0
 25a:	7c 9d       	mul	r23, r12
 25c:	10 0d       	add	r17, r0
 25e:	11 24       	eor	r1, r1
 260:	ca 01       	movw	r24, r20
 262:	b9 01       	movw	r22, r18
 264:	0e 94 df 04 	call	0x9be	; 0x9be <__fixsfsi>
 268:	86 9e       	mul	r8, r22
 26a:	c0 01       	movw	r24, r0
 26c:	87 9e       	mul	r8, r23
 26e:	90 0d       	add	r25, r0
 270:	96 9e       	mul	r9, r22
 272:	90 0d       	add	r25, r0
 274:	11 24       	eor	r1, r1
 276:	08 0f       	add	r16, r24
 278:	19 1f       	adc	r17, r25
 27a:	e6 9c       	mul	r14, r6
 27c:	c0 01       	movw	r24, r0
 27e:	e7 9c       	mul	r14, r7
 280:	90 0d       	add	r25, r0
 282:	f6 9c       	mul	r15, r6
 284:	90 0d       	add	r25, r0
 286:	11 24       	eor	r1, r1
 288:	80 0f       	add	r24, r16
 28a:	91 1f       	adc	r25, r17
 28c:	b5 01       	movw	r22, r10
 28e:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__divmodhi4>
 292:	cb 01       	movw	r24, r22
 294:	0e 94 53 01 	call	0x2a6	; 0x2a6 <set_speed>
 298:	60 cf       	rjmp	.-320    	; 0x15a <main+0x58>

0000029a <forward>:
#include "m_general.h"

void forward(void)
{
	clear(PORTC, 6);
 29a:	46 98       	cbi	0x08, 6	; 8
	clear(PORTC, 7);
 29c:	47 98       	cbi	0x08, 7	; 8

}
 29e:	08 95       	ret

000002a0 <backward>:
void backward(void)
{
	set(PORTC, 6);
 2a0:	46 9a       	sbi	0x08, 6	; 8
	set(PORTC, 7);
 2a2:	47 9a       	sbi	0x08, 7	; 8
}
 2a4:	08 95       	ret

000002a6 <set_speed>:
void set_speed(int d)
{
	// 0 -> 9825
	// 100 -> 65535	
	int s = d;
	if(d < 0)
 2a6:	97 ff       	sbrs	r25, 7
 2a8:	07 c0       	rjmp	.+14     	; 0x2b8 <set_speed+0x12>
	{
		s = -d;
 2aa:	22 27       	eor	r18, r18
 2ac:	33 27       	eor	r19, r19
 2ae:	28 1b       	sub	r18, r24
 2b0:	39 0b       	sbc	r19, r25
	clear(PORTC, 7);

}
void backward(void)
{
	set(PORTC, 6);
 2b2:	46 9a       	sbi	0x08, 6	; 8
	set(PORTC, 7);
 2b4:	47 9a       	sbi	0x08, 7	; 8
 2b6:	03 c0       	rjmp	.+6      	; 0x2be <set_speed+0x18>
#include "m_general.h"

void forward(void)
{
	clear(PORTC, 6);
 2b8:	46 98       	cbi	0x08, 6	; 8
	clear(PORTC, 7);
 2ba:	47 98       	cbi	0x08, 7	; 8
 2bc:	9c 01       	movw	r18, r24
	}
	else
	{
		forward();
	}
	OCR1A = s * 577 + 9825;	
 2be:	81 e4       	ldi	r24, 0x41	; 65
 2c0:	92 e0       	ldi	r25, 0x02	; 2
 2c2:	ac 01       	movw	r20, r24
 2c4:	24 9f       	mul	r18, r20
 2c6:	c0 01       	movw	r24, r0
 2c8:	25 9f       	mul	r18, r21
 2ca:	90 0d       	add	r25, r0
 2cc:	34 9f       	mul	r19, r20
 2ce:	90 0d       	add	r25, r0
 2d0:	11 24       	eor	r1, r1
 2d2:	8f 59       	subi	r24, 0x9F	; 159
 2d4:	99 4d       	sbci	r25, 0xD9	; 217
 2d6:	90 93 89 00 	sts	0x0089, r25
 2da:	80 93 88 00 	sts	0x0088, r24
	if(!s)
 2de:	23 2b       	or	r18, r19
 2e0:	21 f4       	brne	.+8      	; 0x2ea <set_speed+0x44>
		OCR1A = 0;
 2e2:	10 92 89 00 	sts	0x0089, r1
 2e6:	10 92 88 00 	sts	0x0088, r1
 2ea:	08 95       	ret

000002ec <movement_init>:
}

void movement_init(void)
{
	// Set the GPIO
	set(DDRC, 6);
 2ec:	3e 9a       	sbi	0x07, 6	; 7
	set(DDRC, 7);
 2ee:	3f 9a       	sbi	0x07, 7	; 7


	// Clock Source
	clear(TCCR1B, CS12);
 2f0:	e1 e8       	ldi	r30, 0x81	; 129
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	8b 7f       	andi	r24, 0xFB	; 251
 2f8:	80 83       	st	Z, r24
	clear(TCCR1B, CS11);
 2fa:	80 81       	ld	r24, Z
 2fc:	8d 7f       	andi	r24, 0xFD	; 253
 2fe:	80 83       	st	Z, r24
	set(TCCR1B, CS10);
 300:	80 81       	ld	r24, Z
 302:	81 60       	ori	r24, 0x01	; 1
 304:	80 83       	st	Z, r24

	// Sets the timer mode to go up to OCR1A, PWM mode
	ICR1 = 0xffff;
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	9f ef       	ldi	r25, 0xFF	; 255
 30a:	90 93 87 00 	sts	0x0087, r25
 30e:	80 93 86 00 	sts	0x0086, r24

	set(TCCR1B, WGM13);
 312:	80 81       	ld	r24, Z
 314:	80 61       	ori	r24, 0x10	; 16
 316:	80 83       	st	Z, r24
	set(TCCR1B, WGM12);
 318:	80 81       	ld	r24, Z
 31a:	88 60       	ori	r24, 0x08	; 8
 31c:	80 83       	st	Z, r24
	set(TCCR1A, WGM11);
 31e:	e0 e8       	ldi	r30, 0x80	; 128
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	80 81       	ld	r24, Z
 324:	82 60       	ori	r24, 0x02	; 2
 326:	80 83       	st	Z, r24
	clear(TCCR1A, WGM10);
 328:	80 81       	ld	r24, Z
 32a:	8e 7f       	andi	r24, 0xFE	; 254
 32c:	80 83       	st	Z, r24

	// Sets behavior of B5
	set(TCCR1A, COM1A1);
 32e:	80 81       	ld	r24, Z
 330:	80 68       	ori	r24, 0x80	; 128
 332:	80 83       	st	Z, r24
	clear(TCCR1A, COM1A0);
 334:	80 81       	ld	r24, Z
 336:	8f 7b       	andi	r24, 0xBF	; 191
 338:	80 83       	st	Z, r24
	OCR1A = 0;
 33a:	10 92 89 00 	sts	0x0089, r1
 33e:	10 92 88 00 	sts	0x0088, r1
	set(DDRB, 5);
 342:	25 9a       	sbi	0x04, 5	; 4

	// Sets behavior of B6
	clear(TCCR1A, COM1B1);
 344:	80 81       	ld	r24, Z
 346:	8f 7d       	andi	r24, 0xDF	; 223
 348:	80 83       	st	Z, r24
	clear(TCCR1A, COM1B0);
 34a:	80 81       	ld	r24, Z
 34c:	8f 7e       	andi	r24, 0xEF	; 239
 34e:	80 83       	st	Z, r24

	// Sets behavior of B7
	clear(TCCR1A, COM1C1);
 350:	80 81       	ld	r24, Z
 352:	87 7f       	andi	r24, 0xF7	; 247
 354:	80 83       	st	Z, r24
	clear(TCCR1A, COM1C0);
 356:	80 81       	ld	r24, Z
 358:	8b 7f       	andi	r24, 0xFB	; 251
 35a:	80 83       	st	Z, r24


}
 35c:	08 95       	ret

0000035e <sensor_init>:
#include "m_general.h"

void sensor_init(void)
{
	// Set the reference voltage to 3.3 V
	clear(ADMUX, REFS1);
 35e:	ec e7       	ldi	r30, 0x7C	; 124
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	8f 77       	andi	r24, 0x7F	; 127
 366:	80 83       	st	Z, r24
	clear(ADMUX, REFS0);
 368:	80 81       	ld	r24, Z
 36a:	8f 7b       	andi	r24, 0xBF	; 191
 36c:	80 83       	st	Z, r24


	// Set the ADC clock to divid the system clock by 128
	set(ADCSRA, ADPS2);
 36e:	aa e7       	ldi	r26, 0x7A	; 122
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	8c 91       	ld	r24, X
 374:	84 60       	ori	r24, 0x04	; 4
 376:	8c 93       	st	X, r24
	set(ADCSRA, ADPS1);
 378:	8c 91       	ld	r24, X
 37a:	82 60       	ori	r24, 0x02	; 2
 37c:	8c 93       	st	X, r24
	set(ADCSRA, ADPS0);
 37e:	8c 91       	ld	r24, X
 380:	81 60       	ori	r24, 0x01	; 1
 382:	8c 93       	st	X, r24


	// Disables digital input
	set(DIDR0, ADC4D);
 384:	ee e7       	ldi	r30, 0x7E	; 126
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	80 61       	ori	r24, 0x10	; 16
 38c:	80 83       	st	Z, r24
	set(DIDR0, ADC5D);
 38e:	80 81       	ld	r24, Z
 390:	80 62       	ori	r24, 0x20	; 32
 392:	80 83       	st	Z, r24

	// prevent triggerig
	clear(ADCSRA, ADATE);
 394:	8c 91       	ld	r24, X
 396:	8f 7d       	andi	r24, 0xDF	; 223
 398:	8c 93       	st	X, r24

}
 39a:	08 95       	ret

0000039c <get_ADC_values>:

void get_ADC_values(int* accel, int* gyro)
{
 39c:	fc 01       	movw	r30, r24
 39e:	db 01       	movw	r26, r22
	// reads from ADC4 (pin f4)
	clear(ADCSRB, MUX5);
 3a0:	80 91 7b 00 	lds	r24, 0x007B
 3a4:	8f 7d       	andi	r24, 0xDF	; 223
 3a6:	80 93 7b 00 	sts	0x007B, r24
	set(ADMUX, MUX2);
 3aa:	80 91 7c 00 	lds	r24, 0x007C
 3ae:	84 60       	ori	r24, 0x04	; 4
 3b0:	80 93 7c 00 	sts	0x007C, r24
	clear(ADMUX, MUX1);
 3b4:	80 91 7c 00 	lds	r24, 0x007C
 3b8:	8d 7f       	andi	r24, 0xFD	; 253
 3ba:	80 93 7c 00 	sts	0x007C, r24
	clear(ADMUX, MUX0);
 3be:	80 91 7c 00 	lds	r24, 0x007C
 3c2:	8e 7f       	andi	r24, 0xFE	; 254
 3c4:	80 93 7c 00 	sts	0x007C, r24

	// starts the ADC system
	set(ADCSRA, ADEN);
 3c8:	80 91 7a 00 	lds	r24, 0x007A
 3cc:	80 68       	ori	r24, 0x80	; 128
 3ce:	80 93 7a 00 	sts	0x007A, r24
	//Starts the conversion
	set(ADCSRA, ADSC);
 3d2:	80 91 7a 00 	lds	r24, 0x007A
 3d6:	80 64       	ori	r24, 0x40	; 64
 3d8:	80 93 7a 00 	sts	0x007A, r24
	// Waits for the conversion to complete
	while(!check(ADCSRA, ADIF));
 3dc:	80 91 7a 00 	lds	r24, 0x007A
 3e0:	84 ff       	sbrs	r24, 4
 3e2:	fc cf       	rjmp	.-8      	; 0x3dc <get_ADC_values+0x40>
	*accel = ADC;
 3e4:	80 91 78 00 	lds	r24, 0x0078
 3e8:	90 91 79 00 	lds	r25, 0x0079
 3ec:	91 83       	std	Z+1, r25	; 0x01
 3ee:	80 83       	st	Z, r24
	// Resets the conversion flag
	set(ADCSRA, ADIF);
 3f0:	80 91 7a 00 	lds	r24, 0x007A
 3f4:	80 61       	ori	r24, 0x10	; 16
 3f6:	80 93 7a 00 	sts	0x007A, r24
	

	// reads from ADC4 (pin f4)
	clear(ADCSRB, MUX5);
 3fa:	80 91 7b 00 	lds	r24, 0x007B
 3fe:	8f 7d       	andi	r24, 0xDF	; 223
 400:	80 93 7b 00 	sts	0x007B, r24
	set(ADMUX, MUX2);
 404:	80 91 7c 00 	lds	r24, 0x007C
 408:	84 60       	ori	r24, 0x04	; 4
 40a:	80 93 7c 00 	sts	0x007C, r24
	clear(ADMUX, MUX1);
 40e:	80 91 7c 00 	lds	r24, 0x007C
 412:	8d 7f       	andi	r24, 0xFD	; 253
 414:	80 93 7c 00 	sts	0x007C, r24
	set(ADMUX, MUX0);
 418:	80 91 7c 00 	lds	r24, 0x007C
 41c:	81 60       	ori	r24, 0x01	; 1
 41e:	80 93 7c 00 	sts	0x007C, r24

	// starts the ADC system
	set(ADCSRA, ADEN);
 422:	80 91 7a 00 	lds	r24, 0x007A
 426:	80 68       	ori	r24, 0x80	; 128
 428:	80 93 7a 00 	sts	0x007A, r24
	//Starts the conversion
	set(ADCSRA, ADSC);
 42c:	80 91 7a 00 	lds	r24, 0x007A
 430:	80 64       	ori	r24, 0x40	; 64
 432:	80 93 7a 00 	sts	0x007A, r24
	// Waits for the conversion to complete
	while(!check(ADCSRA, ADIF));
 436:	80 91 7a 00 	lds	r24, 0x007A
 43a:	84 ff       	sbrs	r24, 4
 43c:	fc cf       	rjmp	.-8      	; 0x436 <get_ADC_values+0x9a>
	*gyro = ADC;
 43e:	80 91 78 00 	lds	r24, 0x0078
 442:	90 91 79 00 	lds	r25, 0x0079
 446:	8d 93       	st	X+, r24
 448:	9c 93       	st	X, r25
	// Resets the conversion flag
	set(ADCSRA, ADIF);
 44a:	80 91 7a 00 	lds	r24, 0x007A
 44e:	80 61       	ori	r24, 0x10	; 16
 450:	80 93 7a 00 	sts	0x007A, r24
	

		

}
 454:	08 95       	ret

00000456 <_fpadd_parts>:
 456:	a0 e0       	ldi	r26, 0x00	; 0
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	e1 e3       	ldi	r30, 0x31	; 49
 45c:	f2 e0       	ldi	r31, 0x02	; 2
 45e:	0c 94 f6 06 	jmp	0xdec	; 0xdec <__prologue_saves__>
 462:	dc 01       	movw	r26, r24
 464:	2b 01       	movw	r4, r22
 466:	fa 01       	movw	r30, r20
 468:	9c 91       	ld	r25, X
 46a:	92 30       	cpi	r25, 0x02	; 2
 46c:	08 f4       	brcc	.+2      	; 0x470 <_fpadd_parts+0x1a>
 46e:	39 c1       	rjmp	.+626    	; 0x6e2 <_fpadd_parts+0x28c>
 470:	eb 01       	movw	r28, r22
 472:	88 81       	ld	r24, Y
 474:	82 30       	cpi	r24, 0x02	; 2
 476:	08 f4       	brcc	.+2      	; 0x47a <_fpadd_parts+0x24>
 478:	33 c1       	rjmp	.+614    	; 0x6e0 <_fpadd_parts+0x28a>
 47a:	94 30       	cpi	r25, 0x04	; 4
 47c:	69 f4       	brne	.+26     	; 0x498 <_fpadd_parts+0x42>
 47e:	84 30       	cpi	r24, 0x04	; 4
 480:	09 f0       	breq	.+2      	; 0x484 <_fpadd_parts+0x2e>
 482:	2f c1       	rjmp	.+606    	; 0x6e2 <_fpadd_parts+0x28c>
 484:	11 96       	adiw	r26, 0x01	; 1
 486:	9c 91       	ld	r25, X
 488:	11 97       	sbiw	r26, 0x01	; 1
 48a:	89 81       	ldd	r24, Y+1	; 0x01
 48c:	98 17       	cp	r25, r24
 48e:	09 f4       	brne	.+2      	; 0x492 <_fpadd_parts+0x3c>
 490:	28 c1       	rjmp	.+592    	; 0x6e2 <_fpadd_parts+0x28c>
 492:	a4 e1       	ldi	r26, 0x14	; 20
 494:	b1 e0       	ldi	r27, 0x01	; 1
 496:	25 c1       	rjmp	.+586    	; 0x6e2 <_fpadd_parts+0x28c>
 498:	84 30       	cpi	r24, 0x04	; 4
 49a:	09 f4       	brne	.+2      	; 0x49e <_fpadd_parts+0x48>
 49c:	21 c1       	rjmp	.+578    	; 0x6e0 <_fpadd_parts+0x28a>
 49e:	82 30       	cpi	r24, 0x02	; 2
 4a0:	a9 f4       	brne	.+42     	; 0x4cc <_fpadd_parts+0x76>
 4a2:	92 30       	cpi	r25, 0x02	; 2
 4a4:	09 f0       	breq	.+2      	; 0x4a8 <_fpadd_parts+0x52>
 4a6:	1d c1       	rjmp	.+570    	; 0x6e2 <_fpadd_parts+0x28c>
 4a8:	9a 01       	movw	r18, r20
 4aa:	ad 01       	movw	r20, r26
 4ac:	88 e0       	ldi	r24, 0x08	; 8
 4ae:	ea 01       	movw	r28, r20
 4b0:	09 90       	ld	r0, Y+
 4b2:	ae 01       	movw	r20, r28
 4b4:	e9 01       	movw	r28, r18
 4b6:	09 92       	st	Y+, r0
 4b8:	9e 01       	movw	r18, r28
 4ba:	81 50       	subi	r24, 0x01	; 1
 4bc:	c1 f7       	brne	.-16     	; 0x4ae <_fpadd_parts+0x58>
 4be:	e2 01       	movw	r28, r4
 4c0:	89 81       	ldd	r24, Y+1	; 0x01
 4c2:	11 96       	adiw	r26, 0x01	; 1
 4c4:	9c 91       	ld	r25, X
 4c6:	89 23       	and	r24, r25
 4c8:	81 83       	std	Z+1, r24	; 0x01
 4ca:	08 c1       	rjmp	.+528    	; 0x6dc <_fpadd_parts+0x286>
 4cc:	92 30       	cpi	r25, 0x02	; 2
 4ce:	09 f4       	brne	.+2      	; 0x4d2 <_fpadd_parts+0x7c>
 4d0:	07 c1       	rjmp	.+526    	; 0x6e0 <_fpadd_parts+0x28a>
 4d2:	12 96       	adiw	r26, 0x02	; 2
 4d4:	2d 90       	ld	r2, X+
 4d6:	3c 90       	ld	r3, X
 4d8:	13 97       	sbiw	r26, 0x03	; 3
 4da:	eb 01       	movw	r28, r22
 4dc:	8a 81       	ldd	r24, Y+2	; 0x02
 4de:	9b 81       	ldd	r25, Y+3	; 0x03
 4e0:	14 96       	adiw	r26, 0x04	; 4
 4e2:	ad 90       	ld	r10, X+
 4e4:	bd 90       	ld	r11, X+
 4e6:	cd 90       	ld	r12, X+
 4e8:	dc 90       	ld	r13, X
 4ea:	17 97       	sbiw	r26, 0x07	; 7
 4ec:	ec 80       	ldd	r14, Y+4	; 0x04
 4ee:	fd 80       	ldd	r15, Y+5	; 0x05
 4f0:	0e 81       	ldd	r16, Y+6	; 0x06
 4f2:	1f 81       	ldd	r17, Y+7	; 0x07
 4f4:	91 01       	movw	r18, r2
 4f6:	28 1b       	sub	r18, r24
 4f8:	39 0b       	sbc	r19, r25
 4fa:	b9 01       	movw	r22, r18
 4fc:	37 ff       	sbrs	r19, 7
 4fe:	04 c0       	rjmp	.+8      	; 0x508 <_fpadd_parts+0xb2>
 500:	66 27       	eor	r22, r22
 502:	77 27       	eor	r23, r23
 504:	62 1b       	sub	r22, r18
 506:	73 0b       	sbc	r23, r19
 508:	60 32       	cpi	r22, 0x20	; 32
 50a:	71 05       	cpc	r23, r1
 50c:	0c f0       	brlt	.+2      	; 0x510 <_fpadd_parts+0xba>
 50e:	61 c0       	rjmp	.+194    	; 0x5d2 <_fpadd_parts+0x17c>
 510:	12 16       	cp	r1, r18
 512:	13 06       	cpc	r1, r19
 514:	6c f5       	brge	.+90     	; 0x570 <_fpadd_parts+0x11a>
 516:	37 01       	movw	r6, r14
 518:	48 01       	movw	r8, r16
 51a:	06 2e       	mov	r0, r22
 51c:	04 c0       	rjmp	.+8      	; 0x526 <_fpadd_parts+0xd0>
 51e:	96 94       	lsr	r9
 520:	87 94       	ror	r8
 522:	77 94       	ror	r7
 524:	67 94       	ror	r6
 526:	0a 94       	dec	r0
 528:	d2 f7       	brpl	.-12     	; 0x51e <_fpadd_parts+0xc8>
 52a:	21 e0       	ldi	r18, 0x01	; 1
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	40 e0       	ldi	r20, 0x00	; 0
 530:	50 e0       	ldi	r21, 0x00	; 0
 532:	04 c0       	rjmp	.+8      	; 0x53c <_fpadd_parts+0xe6>
 534:	22 0f       	add	r18, r18
 536:	33 1f       	adc	r19, r19
 538:	44 1f       	adc	r20, r20
 53a:	55 1f       	adc	r21, r21
 53c:	6a 95       	dec	r22
 53e:	d2 f7       	brpl	.-12     	; 0x534 <_fpadd_parts+0xde>
 540:	21 50       	subi	r18, 0x01	; 1
 542:	30 40       	sbci	r19, 0x00	; 0
 544:	40 40       	sbci	r20, 0x00	; 0
 546:	50 40       	sbci	r21, 0x00	; 0
 548:	2e 21       	and	r18, r14
 54a:	3f 21       	and	r19, r15
 54c:	40 23       	and	r20, r16
 54e:	51 23       	and	r21, r17
 550:	21 15       	cp	r18, r1
 552:	31 05       	cpc	r19, r1
 554:	41 05       	cpc	r20, r1
 556:	51 05       	cpc	r21, r1
 558:	21 f0       	breq	.+8      	; 0x562 <_fpadd_parts+0x10c>
 55a:	21 e0       	ldi	r18, 0x01	; 1
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	40 e0       	ldi	r20, 0x00	; 0
 560:	50 e0       	ldi	r21, 0x00	; 0
 562:	79 01       	movw	r14, r18
 564:	8a 01       	movw	r16, r20
 566:	e6 28       	or	r14, r6
 568:	f7 28       	or	r15, r7
 56a:	08 29       	or	r16, r8
 56c:	19 29       	or	r17, r9
 56e:	3c c0       	rjmp	.+120    	; 0x5e8 <_fpadd_parts+0x192>
 570:	23 2b       	or	r18, r19
 572:	d1 f1       	breq	.+116    	; 0x5e8 <_fpadd_parts+0x192>
 574:	26 0e       	add	r2, r22
 576:	37 1e       	adc	r3, r23
 578:	35 01       	movw	r6, r10
 57a:	46 01       	movw	r8, r12
 57c:	06 2e       	mov	r0, r22
 57e:	04 c0       	rjmp	.+8      	; 0x588 <_fpadd_parts+0x132>
 580:	96 94       	lsr	r9
 582:	87 94       	ror	r8
 584:	77 94       	ror	r7
 586:	67 94       	ror	r6
 588:	0a 94       	dec	r0
 58a:	d2 f7       	brpl	.-12     	; 0x580 <_fpadd_parts+0x12a>
 58c:	21 e0       	ldi	r18, 0x01	; 1
 58e:	30 e0       	ldi	r19, 0x00	; 0
 590:	40 e0       	ldi	r20, 0x00	; 0
 592:	50 e0       	ldi	r21, 0x00	; 0
 594:	04 c0       	rjmp	.+8      	; 0x59e <_fpadd_parts+0x148>
 596:	22 0f       	add	r18, r18
 598:	33 1f       	adc	r19, r19
 59a:	44 1f       	adc	r20, r20
 59c:	55 1f       	adc	r21, r21
 59e:	6a 95       	dec	r22
 5a0:	d2 f7       	brpl	.-12     	; 0x596 <_fpadd_parts+0x140>
 5a2:	21 50       	subi	r18, 0x01	; 1
 5a4:	30 40       	sbci	r19, 0x00	; 0
 5a6:	40 40       	sbci	r20, 0x00	; 0
 5a8:	50 40       	sbci	r21, 0x00	; 0
 5aa:	2a 21       	and	r18, r10
 5ac:	3b 21       	and	r19, r11
 5ae:	4c 21       	and	r20, r12
 5b0:	5d 21       	and	r21, r13
 5b2:	21 15       	cp	r18, r1
 5b4:	31 05       	cpc	r19, r1
 5b6:	41 05       	cpc	r20, r1
 5b8:	51 05       	cpc	r21, r1
 5ba:	21 f0       	breq	.+8      	; 0x5c4 <_fpadd_parts+0x16e>
 5bc:	21 e0       	ldi	r18, 0x01	; 1
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	40 e0       	ldi	r20, 0x00	; 0
 5c2:	50 e0       	ldi	r21, 0x00	; 0
 5c4:	59 01       	movw	r10, r18
 5c6:	6a 01       	movw	r12, r20
 5c8:	a6 28       	or	r10, r6
 5ca:	b7 28       	or	r11, r7
 5cc:	c8 28       	or	r12, r8
 5ce:	d9 28       	or	r13, r9
 5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <_fpadd_parts+0x192>
 5d2:	82 15       	cp	r24, r2
 5d4:	93 05       	cpc	r25, r3
 5d6:	2c f0       	brlt	.+10     	; 0x5e2 <_fpadd_parts+0x18c>
 5d8:	1c 01       	movw	r2, r24
 5da:	aa 24       	eor	r10, r10
 5dc:	bb 24       	eor	r11, r11
 5de:	65 01       	movw	r12, r10
 5e0:	03 c0       	rjmp	.+6      	; 0x5e8 <_fpadd_parts+0x192>
 5e2:	ee 24       	eor	r14, r14
 5e4:	ff 24       	eor	r15, r15
 5e6:	87 01       	movw	r16, r14
 5e8:	11 96       	adiw	r26, 0x01	; 1
 5ea:	9c 91       	ld	r25, X
 5ec:	d2 01       	movw	r26, r4
 5ee:	11 96       	adiw	r26, 0x01	; 1
 5f0:	8c 91       	ld	r24, X
 5f2:	98 17       	cp	r25, r24
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <_fpadd_parts+0x1a2>
 5f6:	45 c0       	rjmp	.+138    	; 0x682 <_fpadd_parts+0x22c>
 5f8:	99 23       	and	r25, r25
 5fa:	39 f0       	breq	.+14     	; 0x60a <_fpadd_parts+0x1b4>
 5fc:	a8 01       	movw	r20, r16
 5fe:	97 01       	movw	r18, r14
 600:	2a 19       	sub	r18, r10
 602:	3b 09       	sbc	r19, r11
 604:	4c 09       	sbc	r20, r12
 606:	5d 09       	sbc	r21, r13
 608:	06 c0       	rjmp	.+12     	; 0x616 <_fpadd_parts+0x1c0>
 60a:	a6 01       	movw	r20, r12
 60c:	95 01       	movw	r18, r10
 60e:	2e 19       	sub	r18, r14
 610:	3f 09       	sbc	r19, r15
 612:	40 0b       	sbc	r20, r16
 614:	51 0b       	sbc	r21, r17
 616:	57 fd       	sbrc	r21, 7
 618:	08 c0       	rjmp	.+16     	; 0x62a <_fpadd_parts+0x1d4>
 61a:	11 82       	std	Z+1, r1	; 0x01
 61c:	33 82       	std	Z+3, r3	; 0x03
 61e:	22 82       	std	Z+2, r2	; 0x02
 620:	24 83       	std	Z+4, r18	; 0x04
 622:	35 83       	std	Z+5, r19	; 0x05
 624:	46 83       	std	Z+6, r20	; 0x06
 626:	57 83       	std	Z+7, r21	; 0x07
 628:	1d c0       	rjmp	.+58     	; 0x664 <_fpadd_parts+0x20e>
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	81 83       	std	Z+1, r24	; 0x01
 62e:	33 82       	std	Z+3, r3	; 0x03
 630:	22 82       	std	Z+2, r2	; 0x02
 632:	88 27       	eor	r24, r24
 634:	99 27       	eor	r25, r25
 636:	dc 01       	movw	r26, r24
 638:	82 1b       	sub	r24, r18
 63a:	93 0b       	sbc	r25, r19
 63c:	a4 0b       	sbc	r26, r20
 63e:	b5 0b       	sbc	r27, r21
 640:	84 83       	std	Z+4, r24	; 0x04
 642:	95 83       	std	Z+5, r25	; 0x05
 644:	a6 83       	std	Z+6, r26	; 0x06
 646:	b7 83       	std	Z+7, r27	; 0x07
 648:	0d c0       	rjmp	.+26     	; 0x664 <_fpadd_parts+0x20e>
 64a:	22 0f       	add	r18, r18
 64c:	33 1f       	adc	r19, r19
 64e:	44 1f       	adc	r20, r20
 650:	55 1f       	adc	r21, r21
 652:	24 83       	std	Z+4, r18	; 0x04
 654:	35 83       	std	Z+5, r19	; 0x05
 656:	46 83       	std	Z+6, r20	; 0x06
 658:	57 83       	std	Z+7, r21	; 0x07
 65a:	82 81       	ldd	r24, Z+2	; 0x02
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	01 97       	sbiw	r24, 0x01	; 1
 660:	93 83       	std	Z+3, r25	; 0x03
 662:	82 83       	std	Z+2, r24	; 0x02
 664:	24 81       	ldd	r18, Z+4	; 0x04
 666:	35 81       	ldd	r19, Z+5	; 0x05
 668:	46 81       	ldd	r20, Z+6	; 0x06
 66a:	57 81       	ldd	r21, Z+7	; 0x07
 66c:	da 01       	movw	r26, r20
 66e:	c9 01       	movw	r24, r18
 670:	01 97       	sbiw	r24, 0x01	; 1
 672:	a1 09       	sbc	r26, r1
 674:	b1 09       	sbc	r27, r1
 676:	8f 5f       	subi	r24, 0xFF	; 255
 678:	9f 4f       	sbci	r25, 0xFF	; 255
 67a:	af 4f       	sbci	r26, 0xFF	; 255
 67c:	bf 43       	sbci	r27, 0x3F	; 63
 67e:	28 f3       	brcs	.-54     	; 0x64a <_fpadd_parts+0x1f4>
 680:	0b c0       	rjmp	.+22     	; 0x698 <_fpadd_parts+0x242>
 682:	91 83       	std	Z+1, r25	; 0x01
 684:	33 82       	std	Z+3, r3	; 0x03
 686:	22 82       	std	Z+2, r2	; 0x02
 688:	ea 0c       	add	r14, r10
 68a:	fb 1c       	adc	r15, r11
 68c:	0c 1d       	adc	r16, r12
 68e:	1d 1d       	adc	r17, r13
 690:	e4 82       	std	Z+4, r14	; 0x04
 692:	f5 82       	std	Z+5, r15	; 0x05
 694:	06 83       	std	Z+6, r16	; 0x06
 696:	17 83       	std	Z+7, r17	; 0x07
 698:	83 e0       	ldi	r24, 0x03	; 3
 69a:	80 83       	st	Z, r24
 69c:	24 81       	ldd	r18, Z+4	; 0x04
 69e:	35 81       	ldd	r19, Z+5	; 0x05
 6a0:	46 81       	ldd	r20, Z+6	; 0x06
 6a2:	57 81       	ldd	r21, Z+7	; 0x07
 6a4:	57 ff       	sbrs	r21, 7
 6a6:	1a c0       	rjmp	.+52     	; 0x6dc <_fpadd_parts+0x286>
 6a8:	c9 01       	movw	r24, r18
 6aa:	aa 27       	eor	r26, r26
 6ac:	97 fd       	sbrc	r25, 7
 6ae:	a0 95       	com	r26
 6b0:	ba 2f       	mov	r27, r26
 6b2:	81 70       	andi	r24, 0x01	; 1
 6b4:	90 70       	andi	r25, 0x00	; 0
 6b6:	a0 70       	andi	r26, 0x00	; 0
 6b8:	b0 70       	andi	r27, 0x00	; 0
 6ba:	56 95       	lsr	r21
 6bc:	47 95       	ror	r20
 6be:	37 95       	ror	r19
 6c0:	27 95       	ror	r18
 6c2:	82 2b       	or	r24, r18
 6c4:	93 2b       	or	r25, r19
 6c6:	a4 2b       	or	r26, r20
 6c8:	b5 2b       	or	r27, r21
 6ca:	84 83       	std	Z+4, r24	; 0x04
 6cc:	95 83       	std	Z+5, r25	; 0x05
 6ce:	a6 83       	std	Z+6, r26	; 0x06
 6d0:	b7 83       	std	Z+7, r27	; 0x07
 6d2:	82 81       	ldd	r24, Z+2	; 0x02
 6d4:	93 81       	ldd	r25, Z+3	; 0x03
 6d6:	01 96       	adiw	r24, 0x01	; 1
 6d8:	93 83       	std	Z+3, r25	; 0x03
 6da:	82 83       	std	Z+2, r24	; 0x02
 6dc:	df 01       	movw	r26, r30
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <_fpadd_parts+0x28c>
 6e0:	d2 01       	movw	r26, r4
 6e2:	cd 01       	movw	r24, r26
 6e4:	cd b7       	in	r28, 0x3d	; 61
 6e6:	de b7       	in	r29, 0x3e	; 62
 6e8:	e2 e1       	ldi	r30, 0x12	; 18
 6ea:	0c 94 12 07 	jmp	0xe24	; 0xe24 <__epilogue_restores__>

000006ee <__subsf3>:
 6ee:	a0 e2       	ldi	r26, 0x20	; 32
 6f0:	b0 e0       	ldi	r27, 0x00	; 0
 6f2:	ed e7       	ldi	r30, 0x7D	; 125
 6f4:	f3 e0       	ldi	r31, 0x03	; 3
 6f6:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__prologue_saves__+0x18>
 6fa:	69 83       	std	Y+1, r22	; 0x01
 6fc:	7a 83       	std	Y+2, r23	; 0x02
 6fe:	8b 83       	std	Y+3, r24	; 0x03
 700:	9c 83       	std	Y+4, r25	; 0x04
 702:	2d 83       	std	Y+5, r18	; 0x05
 704:	3e 83       	std	Y+6, r19	; 0x06
 706:	4f 83       	std	Y+7, r20	; 0x07
 708:	58 87       	std	Y+8, r21	; 0x08
 70a:	e9 e0       	ldi	r30, 0x09	; 9
 70c:	ee 2e       	mov	r14, r30
 70e:	f1 2c       	mov	r15, r1
 710:	ec 0e       	add	r14, r28
 712:	fd 1e       	adc	r15, r29
 714:	ce 01       	movw	r24, r28
 716:	01 96       	adiw	r24, 0x01	; 1
 718:	b7 01       	movw	r22, r14
 71a:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 71e:	8e 01       	movw	r16, r28
 720:	0f 5e       	subi	r16, 0xEF	; 239
 722:	1f 4f       	sbci	r17, 0xFF	; 255
 724:	ce 01       	movw	r24, r28
 726:	05 96       	adiw	r24, 0x05	; 5
 728:	b8 01       	movw	r22, r16
 72a:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 72e:	8a 89       	ldd	r24, Y+18	; 0x12
 730:	91 e0       	ldi	r25, 0x01	; 1
 732:	89 27       	eor	r24, r25
 734:	8a 8b       	std	Y+18, r24	; 0x12
 736:	c7 01       	movw	r24, r14
 738:	b8 01       	movw	r22, r16
 73a:	ae 01       	movw	r20, r28
 73c:	47 5e       	subi	r20, 0xE7	; 231
 73e:	5f 4f       	sbci	r21, 0xFF	; 255
 740:	0e 94 2b 02 	call	0x456	; 0x456 <_fpadd_parts>
 744:	0e 94 82 05 	call	0xb04	; 0xb04 <__pack_f>
 748:	a0 96       	adiw	r28, 0x20	; 32
 74a:	e6 e0       	ldi	r30, 0x06	; 6
 74c:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__epilogue_restores__+0x18>

00000750 <__addsf3>:
 750:	a0 e2       	ldi	r26, 0x20	; 32
 752:	b0 e0       	ldi	r27, 0x00	; 0
 754:	ee ea       	ldi	r30, 0xAE	; 174
 756:	f3 e0       	ldi	r31, 0x03	; 3
 758:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__prologue_saves__+0x18>
 75c:	69 83       	std	Y+1, r22	; 0x01
 75e:	7a 83       	std	Y+2, r23	; 0x02
 760:	8b 83       	std	Y+3, r24	; 0x03
 762:	9c 83       	std	Y+4, r25	; 0x04
 764:	2d 83       	std	Y+5, r18	; 0x05
 766:	3e 83       	std	Y+6, r19	; 0x06
 768:	4f 83       	std	Y+7, r20	; 0x07
 76a:	58 87       	std	Y+8, r21	; 0x08
 76c:	f9 e0       	ldi	r31, 0x09	; 9
 76e:	ef 2e       	mov	r14, r31
 770:	f1 2c       	mov	r15, r1
 772:	ec 0e       	add	r14, r28
 774:	fd 1e       	adc	r15, r29
 776:	ce 01       	movw	r24, r28
 778:	01 96       	adiw	r24, 0x01	; 1
 77a:	b7 01       	movw	r22, r14
 77c:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 780:	8e 01       	movw	r16, r28
 782:	0f 5e       	subi	r16, 0xEF	; 239
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	ce 01       	movw	r24, r28
 788:	05 96       	adiw	r24, 0x05	; 5
 78a:	b8 01       	movw	r22, r16
 78c:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 790:	c7 01       	movw	r24, r14
 792:	b8 01       	movw	r22, r16
 794:	ae 01       	movw	r20, r28
 796:	47 5e       	subi	r20, 0xE7	; 231
 798:	5f 4f       	sbci	r21, 0xFF	; 255
 79a:	0e 94 2b 02 	call	0x456	; 0x456 <_fpadd_parts>
 79e:	0e 94 82 05 	call	0xb04	; 0xb04 <__pack_f>
 7a2:	a0 96       	adiw	r28, 0x20	; 32
 7a4:	e6 e0       	ldi	r30, 0x06	; 6
 7a6:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__epilogue_restores__+0x18>

000007aa <__divsf3>:
 7aa:	a8 e1       	ldi	r26, 0x18	; 24
 7ac:	b0 e0       	ldi	r27, 0x00	; 0
 7ae:	eb ed       	ldi	r30, 0xDB	; 219
 7b0:	f3 e0       	ldi	r31, 0x03	; 3
 7b2:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__prologue_saves__+0x10>
 7b6:	69 83       	std	Y+1, r22	; 0x01
 7b8:	7a 83       	std	Y+2, r23	; 0x02
 7ba:	8b 83       	std	Y+3, r24	; 0x03
 7bc:	9c 83       	std	Y+4, r25	; 0x04
 7be:	2d 83       	std	Y+5, r18	; 0x05
 7c0:	3e 83       	std	Y+6, r19	; 0x06
 7c2:	4f 83       	std	Y+7, r20	; 0x07
 7c4:	58 87       	std	Y+8, r21	; 0x08
 7c6:	b9 e0       	ldi	r27, 0x09	; 9
 7c8:	eb 2e       	mov	r14, r27
 7ca:	f1 2c       	mov	r15, r1
 7cc:	ec 0e       	add	r14, r28
 7ce:	fd 1e       	adc	r15, r29
 7d0:	ce 01       	movw	r24, r28
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	b7 01       	movw	r22, r14
 7d6:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 7da:	8e 01       	movw	r16, r28
 7dc:	0f 5e       	subi	r16, 0xEF	; 239
 7de:	1f 4f       	sbci	r17, 0xFF	; 255
 7e0:	ce 01       	movw	r24, r28
 7e2:	05 96       	adiw	r24, 0x05	; 5
 7e4:	b8 01       	movw	r22, r16
 7e6:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 7ea:	29 85       	ldd	r18, Y+9	; 0x09
 7ec:	22 30       	cpi	r18, 0x02	; 2
 7ee:	08 f4       	brcc	.+2      	; 0x7f2 <__divsf3+0x48>
 7f0:	7e c0       	rjmp	.+252    	; 0x8ee <__divsf3+0x144>
 7f2:	39 89       	ldd	r19, Y+17	; 0x11
 7f4:	32 30       	cpi	r19, 0x02	; 2
 7f6:	10 f4       	brcc	.+4      	; 0x7fc <__divsf3+0x52>
 7f8:	b8 01       	movw	r22, r16
 7fa:	7c c0       	rjmp	.+248    	; 0x8f4 <__divsf3+0x14a>
 7fc:	8a 85       	ldd	r24, Y+10	; 0x0a
 7fe:	9a 89       	ldd	r25, Y+18	; 0x12
 800:	89 27       	eor	r24, r25
 802:	8a 87       	std	Y+10, r24	; 0x0a
 804:	24 30       	cpi	r18, 0x04	; 4
 806:	11 f0       	breq	.+4      	; 0x80c <__divsf3+0x62>
 808:	22 30       	cpi	r18, 0x02	; 2
 80a:	31 f4       	brne	.+12     	; 0x818 <__divsf3+0x6e>
 80c:	23 17       	cp	r18, r19
 80e:	09 f0       	breq	.+2      	; 0x812 <__divsf3+0x68>
 810:	6e c0       	rjmp	.+220    	; 0x8ee <__divsf3+0x144>
 812:	64 e1       	ldi	r22, 0x14	; 20
 814:	71 e0       	ldi	r23, 0x01	; 1
 816:	6e c0       	rjmp	.+220    	; 0x8f4 <__divsf3+0x14a>
 818:	34 30       	cpi	r19, 0x04	; 4
 81a:	39 f4       	brne	.+14     	; 0x82a <__divsf3+0x80>
 81c:	1d 86       	std	Y+13, r1	; 0x0d
 81e:	1e 86       	std	Y+14, r1	; 0x0e
 820:	1f 86       	std	Y+15, r1	; 0x0f
 822:	18 8a       	std	Y+16, r1	; 0x10
 824:	1c 86       	std	Y+12, r1	; 0x0c
 826:	1b 86       	std	Y+11, r1	; 0x0b
 828:	04 c0       	rjmp	.+8      	; 0x832 <__divsf3+0x88>
 82a:	32 30       	cpi	r19, 0x02	; 2
 82c:	21 f4       	brne	.+8      	; 0x836 <__divsf3+0x8c>
 82e:	84 e0       	ldi	r24, 0x04	; 4
 830:	89 87       	std	Y+9, r24	; 0x09
 832:	b7 01       	movw	r22, r14
 834:	5f c0       	rjmp	.+190    	; 0x8f4 <__divsf3+0x14a>
 836:	2b 85       	ldd	r18, Y+11	; 0x0b
 838:	3c 85       	ldd	r19, Y+12	; 0x0c
 83a:	8b 89       	ldd	r24, Y+19	; 0x13
 83c:	9c 89       	ldd	r25, Y+20	; 0x14
 83e:	28 1b       	sub	r18, r24
 840:	39 0b       	sbc	r19, r25
 842:	3c 87       	std	Y+12, r19	; 0x0c
 844:	2b 87       	std	Y+11, r18	; 0x0b
 846:	ed 84       	ldd	r14, Y+13	; 0x0d
 848:	fe 84       	ldd	r15, Y+14	; 0x0e
 84a:	0f 85       	ldd	r16, Y+15	; 0x0f
 84c:	18 89       	ldd	r17, Y+16	; 0x10
 84e:	ad 88       	ldd	r10, Y+21	; 0x15
 850:	be 88       	ldd	r11, Y+22	; 0x16
 852:	cf 88       	ldd	r12, Y+23	; 0x17
 854:	d8 8c       	ldd	r13, Y+24	; 0x18
 856:	ea 14       	cp	r14, r10
 858:	fb 04       	cpc	r15, r11
 85a:	0c 05       	cpc	r16, r12
 85c:	1d 05       	cpc	r17, r13
 85e:	40 f4       	brcc	.+16     	; 0x870 <__divsf3+0xc6>
 860:	ee 0c       	add	r14, r14
 862:	ff 1c       	adc	r15, r15
 864:	00 1f       	adc	r16, r16
 866:	11 1f       	adc	r17, r17
 868:	21 50       	subi	r18, 0x01	; 1
 86a:	30 40       	sbci	r19, 0x00	; 0
 86c:	3c 87       	std	Y+12, r19	; 0x0c
 86e:	2b 87       	std	Y+11, r18	; 0x0b
 870:	20 e0       	ldi	r18, 0x00	; 0
 872:	30 e0       	ldi	r19, 0x00	; 0
 874:	40 e0       	ldi	r20, 0x00	; 0
 876:	50 e0       	ldi	r21, 0x00	; 0
 878:	80 e0       	ldi	r24, 0x00	; 0
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	a0 e0       	ldi	r26, 0x00	; 0
 87e:	b0 e4       	ldi	r27, 0x40	; 64
 880:	60 e0       	ldi	r22, 0x00	; 0
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	ea 14       	cp	r14, r10
 886:	fb 04       	cpc	r15, r11
 888:	0c 05       	cpc	r16, r12
 88a:	1d 05       	cpc	r17, r13
 88c:	40 f0       	brcs	.+16     	; 0x89e <__divsf3+0xf4>
 88e:	28 2b       	or	r18, r24
 890:	39 2b       	or	r19, r25
 892:	4a 2b       	or	r20, r26
 894:	5b 2b       	or	r21, r27
 896:	ea 18       	sub	r14, r10
 898:	fb 08       	sbc	r15, r11
 89a:	0c 09       	sbc	r16, r12
 89c:	1d 09       	sbc	r17, r13
 89e:	b6 95       	lsr	r27
 8a0:	a7 95       	ror	r26
 8a2:	97 95       	ror	r25
 8a4:	87 95       	ror	r24
 8a6:	ee 0c       	add	r14, r14
 8a8:	ff 1c       	adc	r15, r15
 8aa:	00 1f       	adc	r16, r16
 8ac:	11 1f       	adc	r17, r17
 8ae:	6f 5f       	subi	r22, 0xFF	; 255
 8b0:	7f 4f       	sbci	r23, 0xFF	; 255
 8b2:	6f 31       	cpi	r22, 0x1F	; 31
 8b4:	71 05       	cpc	r23, r1
 8b6:	31 f7       	brne	.-52     	; 0x884 <__divsf3+0xda>
 8b8:	da 01       	movw	r26, r20
 8ba:	c9 01       	movw	r24, r18
 8bc:	8f 77       	andi	r24, 0x7F	; 127
 8be:	90 70       	andi	r25, 0x00	; 0
 8c0:	a0 70       	andi	r26, 0x00	; 0
 8c2:	b0 70       	andi	r27, 0x00	; 0
 8c4:	80 34       	cpi	r24, 0x40	; 64
 8c6:	91 05       	cpc	r25, r1
 8c8:	a1 05       	cpc	r26, r1
 8ca:	b1 05       	cpc	r27, r1
 8cc:	61 f4       	brne	.+24     	; 0x8e6 <__divsf3+0x13c>
 8ce:	27 fd       	sbrc	r18, 7
 8d0:	0a c0       	rjmp	.+20     	; 0x8e6 <__divsf3+0x13c>
 8d2:	e1 14       	cp	r14, r1
 8d4:	f1 04       	cpc	r15, r1
 8d6:	01 05       	cpc	r16, r1
 8d8:	11 05       	cpc	r17, r1
 8da:	29 f0       	breq	.+10     	; 0x8e6 <__divsf3+0x13c>
 8dc:	20 5c       	subi	r18, 0xC0	; 192
 8de:	3f 4f       	sbci	r19, 0xFF	; 255
 8e0:	4f 4f       	sbci	r20, 0xFF	; 255
 8e2:	5f 4f       	sbci	r21, 0xFF	; 255
 8e4:	20 78       	andi	r18, 0x80	; 128
 8e6:	2d 87       	std	Y+13, r18	; 0x0d
 8e8:	3e 87       	std	Y+14, r19	; 0x0e
 8ea:	4f 87       	std	Y+15, r20	; 0x0f
 8ec:	58 8b       	std	Y+16, r21	; 0x10
 8ee:	be 01       	movw	r22, r28
 8f0:	67 5f       	subi	r22, 0xF7	; 247
 8f2:	7f 4f       	sbci	r23, 0xFF	; 255
 8f4:	cb 01       	movw	r24, r22
 8f6:	0e 94 82 05 	call	0xb04	; 0xb04 <__pack_f>
 8fa:	68 96       	adiw	r28, 0x18	; 24
 8fc:	ea e0       	ldi	r30, 0x0A	; 10
 8fe:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__epilogue_restores__+0x10>

00000902 <__floatsisf>:
 902:	a8 e0       	ldi	r26, 0x08	; 8
 904:	b0 e0       	ldi	r27, 0x00	; 0
 906:	e7 e8       	ldi	r30, 0x87	; 135
 908:	f4 e0       	ldi	r31, 0x04	; 4
 90a:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__prologue_saves__+0x12>
 90e:	9b 01       	movw	r18, r22
 910:	ac 01       	movw	r20, r24
 912:	83 e0       	ldi	r24, 0x03	; 3
 914:	89 83       	std	Y+1, r24	; 0x01
 916:	da 01       	movw	r26, r20
 918:	c9 01       	movw	r24, r18
 91a:	88 27       	eor	r24, r24
 91c:	b7 fd       	sbrc	r27, 7
 91e:	83 95       	inc	r24
 920:	99 27       	eor	r25, r25
 922:	aa 27       	eor	r26, r26
 924:	bb 27       	eor	r27, r27
 926:	b8 2e       	mov	r11, r24
 928:	21 15       	cp	r18, r1
 92a:	31 05       	cpc	r19, r1
 92c:	41 05       	cpc	r20, r1
 92e:	51 05       	cpc	r21, r1
 930:	19 f4       	brne	.+6      	; 0x938 <__floatsisf+0x36>
 932:	82 e0       	ldi	r24, 0x02	; 2
 934:	89 83       	std	Y+1, r24	; 0x01
 936:	3a c0       	rjmp	.+116    	; 0x9ac <__floatsisf+0xaa>
 938:	88 23       	and	r24, r24
 93a:	a9 f0       	breq	.+42     	; 0x966 <__floatsisf+0x64>
 93c:	20 30       	cpi	r18, 0x00	; 0
 93e:	80 e0       	ldi	r24, 0x00	; 0
 940:	38 07       	cpc	r19, r24
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	48 07       	cpc	r20, r24
 946:	80 e8       	ldi	r24, 0x80	; 128
 948:	58 07       	cpc	r21, r24
 94a:	29 f4       	brne	.+10     	; 0x956 <__floatsisf+0x54>
 94c:	60 e0       	ldi	r22, 0x00	; 0
 94e:	70 e0       	ldi	r23, 0x00	; 0
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	9f ec       	ldi	r25, 0xCF	; 207
 954:	30 c0       	rjmp	.+96     	; 0x9b6 <__floatsisf+0xb4>
 956:	ee 24       	eor	r14, r14
 958:	ff 24       	eor	r15, r15
 95a:	87 01       	movw	r16, r14
 95c:	e2 1a       	sub	r14, r18
 95e:	f3 0a       	sbc	r15, r19
 960:	04 0b       	sbc	r16, r20
 962:	15 0b       	sbc	r17, r21
 964:	02 c0       	rjmp	.+4      	; 0x96a <__floatsisf+0x68>
 966:	79 01       	movw	r14, r18
 968:	8a 01       	movw	r16, r20
 96a:	8e e1       	ldi	r24, 0x1E	; 30
 96c:	c8 2e       	mov	r12, r24
 96e:	d1 2c       	mov	r13, r1
 970:	dc 82       	std	Y+4, r13	; 0x04
 972:	cb 82       	std	Y+3, r12	; 0x03
 974:	ed 82       	std	Y+5, r14	; 0x05
 976:	fe 82       	std	Y+6, r15	; 0x06
 978:	0f 83       	std	Y+7, r16	; 0x07
 97a:	18 87       	std	Y+8, r17	; 0x08
 97c:	c8 01       	movw	r24, r16
 97e:	b7 01       	movw	r22, r14
 980:	0e 94 33 05 	call	0xa66	; 0xa66 <__clzsi2>
 984:	01 97       	sbiw	r24, 0x01	; 1
 986:	18 16       	cp	r1, r24
 988:	19 06       	cpc	r1, r25
 98a:	84 f4       	brge	.+32     	; 0x9ac <__floatsisf+0xaa>
 98c:	08 2e       	mov	r0, r24
 98e:	04 c0       	rjmp	.+8      	; 0x998 <__floatsisf+0x96>
 990:	ee 0c       	add	r14, r14
 992:	ff 1c       	adc	r15, r15
 994:	00 1f       	adc	r16, r16
 996:	11 1f       	adc	r17, r17
 998:	0a 94       	dec	r0
 99a:	d2 f7       	brpl	.-12     	; 0x990 <__floatsisf+0x8e>
 99c:	ed 82       	std	Y+5, r14	; 0x05
 99e:	fe 82       	std	Y+6, r15	; 0x06
 9a0:	0f 83       	std	Y+7, r16	; 0x07
 9a2:	18 87       	std	Y+8, r17	; 0x08
 9a4:	c8 1a       	sub	r12, r24
 9a6:	d9 0a       	sbc	r13, r25
 9a8:	dc 82       	std	Y+4, r13	; 0x04
 9aa:	cb 82       	std	Y+3, r12	; 0x03
 9ac:	ba 82       	std	Y+2, r11	; 0x02
 9ae:	ce 01       	movw	r24, r28
 9b0:	01 96       	adiw	r24, 0x01	; 1
 9b2:	0e 94 82 05 	call	0xb04	; 0xb04 <__pack_f>
 9b6:	28 96       	adiw	r28, 0x08	; 8
 9b8:	e9 e0       	ldi	r30, 0x09	; 9
 9ba:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <__epilogue_restores__+0x12>

000009be <__fixsfsi>:
 9be:	ac e0       	ldi	r26, 0x0C	; 12
 9c0:	b0 e0       	ldi	r27, 0x00	; 0
 9c2:	e5 ee       	ldi	r30, 0xE5	; 229
 9c4:	f4 e0       	ldi	r31, 0x04	; 4
 9c6:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__prologue_saves__+0x20>
 9ca:	69 83       	std	Y+1, r22	; 0x01
 9cc:	7a 83       	std	Y+2, r23	; 0x02
 9ce:	8b 83       	std	Y+3, r24	; 0x03
 9d0:	9c 83       	std	Y+4, r25	; 0x04
 9d2:	ce 01       	movw	r24, r28
 9d4:	01 96       	adiw	r24, 0x01	; 1
 9d6:	be 01       	movw	r22, r28
 9d8:	6b 5f       	subi	r22, 0xFB	; 251
 9da:	7f 4f       	sbci	r23, 0xFF	; 255
 9dc:	0e 94 57 06 	call	0xcae	; 0xcae <__unpack_f>
 9e0:	8d 81       	ldd	r24, Y+5	; 0x05
 9e2:	82 30       	cpi	r24, 0x02	; 2
 9e4:	61 f1       	breq	.+88     	; 0xa3e <__fixsfsi+0x80>
 9e6:	82 30       	cpi	r24, 0x02	; 2
 9e8:	50 f1       	brcs	.+84     	; 0xa3e <__fixsfsi+0x80>
 9ea:	84 30       	cpi	r24, 0x04	; 4
 9ec:	21 f4       	brne	.+8      	; 0x9f6 <__fixsfsi+0x38>
 9ee:	8e 81       	ldd	r24, Y+6	; 0x06
 9f0:	88 23       	and	r24, r24
 9f2:	51 f1       	breq	.+84     	; 0xa48 <__fixsfsi+0x8a>
 9f4:	2e c0       	rjmp	.+92     	; 0xa52 <__fixsfsi+0x94>
 9f6:	2f 81       	ldd	r18, Y+7	; 0x07
 9f8:	38 85       	ldd	r19, Y+8	; 0x08
 9fa:	37 fd       	sbrc	r19, 7
 9fc:	20 c0       	rjmp	.+64     	; 0xa3e <__fixsfsi+0x80>
 9fe:	6e 81       	ldd	r22, Y+6	; 0x06
 a00:	2f 31       	cpi	r18, 0x1F	; 31
 a02:	31 05       	cpc	r19, r1
 a04:	1c f0       	brlt	.+6      	; 0xa0c <__fixsfsi+0x4e>
 a06:	66 23       	and	r22, r22
 a08:	f9 f0       	breq	.+62     	; 0xa48 <__fixsfsi+0x8a>
 a0a:	23 c0       	rjmp	.+70     	; 0xa52 <__fixsfsi+0x94>
 a0c:	8e e1       	ldi	r24, 0x1E	; 30
 a0e:	90 e0       	ldi	r25, 0x00	; 0
 a10:	82 1b       	sub	r24, r18
 a12:	93 0b       	sbc	r25, r19
 a14:	29 85       	ldd	r18, Y+9	; 0x09
 a16:	3a 85       	ldd	r19, Y+10	; 0x0a
 a18:	4b 85       	ldd	r20, Y+11	; 0x0b
 a1a:	5c 85       	ldd	r21, Y+12	; 0x0c
 a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__fixsfsi+0x68>
 a1e:	56 95       	lsr	r21
 a20:	47 95       	ror	r20
 a22:	37 95       	ror	r19
 a24:	27 95       	ror	r18
 a26:	8a 95       	dec	r24
 a28:	d2 f7       	brpl	.-12     	; 0xa1e <__fixsfsi+0x60>
 a2a:	66 23       	and	r22, r22
 a2c:	b1 f0       	breq	.+44     	; 0xa5a <__fixsfsi+0x9c>
 a2e:	50 95       	com	r21
 a30:	40 95       	com	r20
 a32:	30 95       	com	r19
 a34:	21 95       	neg	r18
 a36:	3f 4f       	sbci	r19, 0xFF	; 255
 a38:	4f 4f       	sbci	r20, 0xFF	; 255
 a3a:	5f 4f       	sbci	r21, 0xFF	; 255
 a3c:	0e c0       	rjmp	.+28     	; 0xa5a <__fixsfsi+0x9c>
 a3e:	20 e0       	ldi	r18, 0x00	; 0
 a40:	30 e0       	ldi	r19, 0x00	; 0
 a42:	40 e0       	ldi	r20, 0x00	; 0
 a44:	50 e0       	ldi	r21, 0x00	; 0
 a46:	09 c0       	rjmp	.+18     	; 0xa5a <__fixsfsi+0x9c>
 a48:	2f ef       	ldi	r18, 0xFF	; 255
 a4a:	3f ef       	ldi	r19, 0xFF	; 255
 a4c:	4f ef       	ldi	r20, 0xFF	; 255
 a4e:	5f e7       	ldi	r21, 0x7F	; 127
 a50:	04 c0       	rjmp	.+8      	; 0xa5a <__fixsfsi+0x9c>
 a52:	20 e0       	ldi	r18, 0x00	; 0
 a54:	30 e0       	ldi	r19, 0x00	; 0
 a56:	40 e0       	ldi	r20, 0x00	; 0
 a58:	50 e8       	ldi	r21, 0x80	; 128
 a5a:	b9 01       	movw	r22, r18
 a5c:	ca 01       	movw	r24, r20
 a5e:	2c 96       	adiw	r28, 0x0c	; 12
 a60:	e2 e0       	ldi	r30, 0x02	; 2
 a62:	0c 94 22 07 	jmp	0xe44	; 0xe44 <__epilogue_restores__+0x20>

00000a66 <__clzsi2>:
 a66:	ef 92       	push	r14
 a68:	ff 92       	push	r15
 a6a:	0f 93       	push	r16
 a6c:	1f 93       	push	r17
 a6e:	7b 01       	movw	r14, r22
 a70:	8c 01       	movw	r16, r24
 a72:	80 e0       	ldi	r24, 0x00	; 0
 a74:	e8 16       	cp	r14, r24
 a76:	80 e0       	ldi	r24, 0x00	; 0
 a78:	f8 06       	cpc	r15, r24
 a7a:	81 e0       	ldi	r24, 0x01	; 1
 a7c:	08 07       	cpc	r16, r24
 a7e:	80 e0       	ldi	r24, 0x00	; 0
 a80:	18 07       	cpc	r17, r24
 a82:	88 f4       	brcc	.+34     	; 0xaa6 <__clzsi2+0x40>
 a84:	8f ef       	ldi	r24, 0xFF	; 255
 a86:	e8 16       	cp	r14, r24
 a88:	f1 04       	cpc	r15, r1
 a8a:	01 05       	cpc	r16, r1
 a8c:	11 05       	cpc	r17, r1
 a8e:	31 f0       	breq	.+12     	; 0xa9c <__clzsi2+0x36>
 a90:	28 f0       	brcs	.+10     	; 0xa9c <__clzsi2+0x36>
 a92:	88 e0       	ldi	r24, 0x08	; 8
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	a0 e0       	ldi	r26, 0x00	; 0
 a98:	b0 e0       	ldi	r27, 0x00	; 0
 a9a:	17 c0       	rjmp	.+46     	; 0xaca <__clzsi2+0x64>
 a9c:	80 e0       	ldi	r24, 0x00	; 0
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	a0 e0       	ldi	r26, 0x00	; 0
 aa2:	b0 e0       	ldi	r27, 0x00	; 0
 aa4:	12 c0       	rjmp	.+36     	; 0xaca <__clzsi2+0x64>
 aa6:	80 e0       	ldi	r24, 0x00	; 0
 aa8:	e8 16       	cp	r14, r24
 aaa:	80 e0       	ldi	r24, 0x00	; 0
 aac:	f8 06       	cpc	r15, r24
 aae:	80 e0       	ldi	r24, 0x00	; 0
 ab0:	08 07       	cpc	r16, r24
 ab2:	81 e0       	ldi	r24, 0x01	; 1
 ab4:	18 07       	cpc	r17, r24
 ab6:	28 f0       	brcs	.+10     	; 0xac2 <__clzsi2+0x5c>
 ab8:	88 e1       	ldi	r24, 0x18	; 24
 aba:	90 e0       	ldi	r25, 0x00	; 0
 abc:	a0 e0       	ldi	r26, 0x00	; 0
 abe:	b0 e0       	ldi	r27, 0x00	; 0
 ac0:	04 c0       	rjmp	.+8      	; 0xaca <__clzsi2+0x64>
 ac2:	80 e1       	ldi	r24, 0x10	; 16
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	a0 e0       	ldi	r26, 0x00	; 0
 ac8:	b0 e0       	ldi	r27, 0x00	; 0
 aca:	20 e2       	ldi	r18, 0x20	; 32
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	40 e0       	ldi	r20, 0x00	; 0
 ad0:	50 e0       	ldi	r21, 0x00	; 0
 ad2:	28 1b       	sub	r18, r24
 ad4:	39 0b       	sbc	r19, r25
 ad6:	4a 0b       	sbc	r20, r26
 ad8:	5b 0b       	sbc	r21, r27
 ada:	04 c0       	rjmp	.+8      	; 0xae4 <__clzsi2+0x7e>
 adc:	16 95       	lsr	r17
 ade:	07 95       	ror	r16
 ae0:	f7 94       	ror	r15
 ae2:	e7 94       	ror	r14
 ae4:	8a 95       	dec	r24
 ae6:	d2 f7       	brpl	.-12     	; 0xadc <__clzsi2+0x76>
 ae8:	f7 01       	movw	r30, r14
 aea:	e4 5e       	subi	r30, 0xE4	; 228
 aec:	fe 4f       	sbci	r31, 0xFE	; 254
 aee:	80 81       	ld	r24, Z
 af0:	28 1b       	sub	r18, r24
 af2:	31 09       	sbc	r19, r1
 af4:	41 09       	sbc	r20, r1
 af6:	51 09       	sbc	r21, r1
 af8:	c9 01       	movw	r24, r18
 afa:	1f 91       	pop	r17
 afc:	0f 91       	pop	r16
 afe:	ff 90       	pop	r15
 b00:	ef 90       	pop	r14
 b02:	08 95       	ret

00000b04 <__pack_f>:
 b04:	df 92       	push	r13
 b06:	ef 92       	push	r14
 b08:	ff 92       	push	r15
 b0a:	0f 93       	push	r16
 b0c:	1f 93       	push	r17
 b0e:	fc 01       	movw	r30, r24
 b10:	e4 80       	ldd	r14, Z+4	; 0x04
 b12:	f5 80       	ldd	r15, Z+5	; 0x05
 b14:	06 81       	ldd	r16, Z+6	; 0x06
 b16:	17 81       	ldd	r17, Z+7	; 0x07
 b18:	d1 80       	ldd	r13, Z+1	; 0x01
 b1a:	80 81       	ld	r24, Z
 b1c:	82 30       	cpi	r24, 0x02	; 2
 b1e:	48 f4       	brcc	.+18     	; 0xb32 <__pack_f+0x2e>
 b20:	80 e0       	ldi	r24, 0x00	; 0
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	a0 e1       	ldi	r26, 0x10	; 16
 b26:	b0 e0       	ldi	r27, 0x00	; 0
 b28:	e8 2a       	or	r14, r24
 b2a:	f9 2a       	or	r15, r25
 b2c:	0a 2b       	or	r16, r26
 b2e:	1b 2b       	or	r17, r27
 b30:	a5 c0       	rjmp	.+330    	; 0xc7c <__pack_f+0x178>
 b32:	84 30       	cpi	r24, 0x04	; 4
 b34:	09 f4       	brne	.+2      	; 0xb38 <__pack_f+0x34>
 b36:	9f c0       	rjmp	.+318    	; 0xc76 <__pack_f+0x172>
 b38:	82 30       	cpi	r24, 0x02	; 2
 b3a:	21 f4       	brne	.+8      	; 0xb44 <__pack_f+0x40>
 b3c:	ee 24       	eor	r14, r14
 b3e:	ff 24       	eor	r15, r15
 b40:	87 01       	movw	r16, r14
 b42:	05 c0       	rjmp	.+10     	; 0xb4e <__pack_f+0x4a>
 b44:	e1 14       	cp	r14, r1
 b46:	f1 04       	cpc	r15, r1
 b48:	01 05       	cpc	r16, r1
 b4a:	11 05       	cpc	r17, r1
 b4c:	19 f4       	brne	.+6      	; 0xb54 <__pack_f+0x50>
 b4e:	e0 e0       	ldi	r30, 0x00	; 0
 b50:	f0 e0       	ldi	r31, 0x00	; 0
 b52:	96 c0       	rjmp	.+300    	; 0xc80 <__pack_f+0x17c>
 b54:	62 81       	ldd	r22, Z+2	; 0x02
 b56:	73 81       	ldd	r23, Z+3	; 0x03
 b58:	9f ef       	ldi	r25, 0xFF	; 255
 b5a:	62 38       	cpi	r22, 0x82	; 130
 b5c:	79 07       	cpc	r23, r25
 b5e:	0c f0       	brlt	.+2      	; 0xb62 <__pack_f+0x5e>
 b60:	5b c0       	rjmp	.+182    	; 0xc18 <__pack_f+0x114>
 b62:	22 e8       	ldi	r18, 0x82	; 130
 b64:	3f ef       	ldi	r19, 0xFF	; 255
 b66:	26 1b       	sub	r18, r22
 b68:	37 0b       	sbc	r19, r23
 b6a:	2a 31       	cpi	r18, 0x1A	; 26
 b6c:	31 05       	cpc	r19, r1
 b6e:	2c f0       	brlt	.+10     	; 0xb7a <__pack_f+0x76>
 b70:	20 e0       	ldi	r18, 0x00	; 0
 b72:	30 e0       	ldi	r19, 0x00	; 0
 b74:	40 e0       	ldi	r20, 0x00	; 0
 b76:	50 e0       	ldi	r21, 0x00	; 0
 b78:	2a c0       	rjmp	.+84     	; 0xbce <__pack_f+0xca>
 b7a:	b8 01       	movw	r22, r16
 b7c:	a7 01       	movw	r20, r14
 b7e:	02 2e       	mov	r0, r18
 b80:	04 c0       	rjmp	.+8      	; 0xb8a <__pack_f+0x86>
 b82:	76 95       	lsr	r23
 b84:	67 95       	ror	r22
 b86:	57 95       	ror	r21
 b88:	47 95       	ror	r20
 b8a:	0a 94       	dec	r0
 b8c:	d2 f7       	brpl	.-12     	; 0xb82 <__pack_f+0x7e>
 b8e:	81 e0       	ldi	r24, 0x01	; 1
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	a0 e0       	ldi	r26, 0x00	; 0
 b94:	b0 e0       	ldi	r27, 0x00	; 0
 b96:	04 c0       	rjmp	.+8      	; 0xba0 <__pack_f+0x9c>
 b98:	88 0f       	add	r24, r24
 b9a:	99 1f       	adc	r25, r25
 b9c:	aa 1f       	adc	r26, r26
 b9e:	bb 1f       	adc	r27, r27
 ba0:	2a 95       	dec	r18
 ba2:	d2 f7       	brpl	.-12     	; 0xb98 <__pack_f+0x94>
 ba4:	01 97       	sbiw	r24, 0x01	; 1
 ba6:	a1 09       	sbc	r26, r1
 ba8:	b1 09       	sbc	r27, r1
 baa:	8e 21       	and	r24, r14
 bac:	9f 21       	and	r25, r15
 bae:	a0 23       	and	r26, r16
 bb0:	b1 23       	and	r27, r17
 bb2:	00 97       	sbiw	r24, 0x00	; 0
 bb4:	a1 05       	cpc	r26, r1
 bb6:	b1 05       	cpc	r27, r1
 bb8:	21 f0       	breq	.+8      	; 0xbc2 <__pack_f+0xbe>
 bba:	81 e0       	ldi	r24, 0x01	; 1
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	a0 e0       	ldi	r26, 0x00	; 0
 bc0:	b0 e0       	ldi	r27, 0x00	; 0
 bc2:	9a 01       	movw	r18, r20
 bc4:	ab 01       	movw	r20, r22
 bc6:	28 2b       	or	r18, r24
 bc8:	39 2b       	or	r19, r25
 bca:	4a 2b       	or	r20, r26
 bcc:	5b 2b       	or	r21, r27
 bce:	da 01       	movw	r26, r20
 bd0:	c9 01       	movw	r24, r18
 bd2:	8f 77       	andi	r24, 0x7F	; 127
 bd4:	90 70       	andi	r25, 0x00	; 0
 bd6:	a0 70       	andi	r26, 0x00	; 0
 bd8:	b0 70       	andi	r27, 0x00	; 0
 bda:	80 34       	cpi	r24, 0x40	; 64
 bdc:	91 05       	cpc	r25, r1
 bde:	a1 05       	cpc	r26, r1
 be0:	b1 05       	cpc	r27, r1
 be2:	39 f4       	brne	.+14     	; 0xbf2 <__pack_f+0xee>
 be4:	27 ff       	sbrs	r18, 7
 be6:	09 c0       	rjmp	.+18     	; 0xbfa <__pack_f+0xf6>
 be8:	20 5c       	subi	r18, 0xC0	; 192
 bea:	3f 4f       	sbci	r19, 0xFF	; 255
 bec:	4f 4f       	sbci	r20, 0xFF	; 255
 bee:	5f 4f       	sbci	r21, 0xFF	; 255
 bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__pack_f+0xf6>
 bf2:	21 5c       	subi	r18, 0xC1	; 193
 bf4:	3f 4f       	sbci	r19, 0xFF	; 255
 bf6:	4f 4f       	sbci	r20, 0xFF	; 255
 bf8:	5f 4f       	sbci	r21, 0xFF	; 255
 bfa:	e0 e0       	ldi	r30, 0x00	; 0
 bfc:	f0 e0       	ldi	r31, 0x00	; 0
 bfe:	20 30       	cpi	r18, 0x00	; 0
 c00:	a0 e0       	ldi	r26, 0x00	; 0
 c02:	3a 07       	cpc	r19, r26
 c04:	a0 e0       	ldi	r26, 0x00	; 0
 c06:	4a 07       	cpc	r20, r26
 c08:	a0 e4       	ldi	r26, 0x40	; 64
 c0a:	5a 07       	cpc	r21, r26
 c0c:	10 f0       	brcs	.+4      	; 0xc12 <__pack_f+0x10e>
 c0e:	e1 e0       	ldi	r30, 0x01	; 1
 c10:	f0 e0       	ldi	r31, 0x00	; 0
 c12:	79 01       	movw	r14, r18
 c14:	8a 01       	movw	r16, r20
 c16:	27 c0       	rjmp	.+78     	; 0xc66 <__pack_f+0x162>
 c18:	60 38       	cpi	r22, 0x80	; 128
 c1a:	71 05       	cpc	r23, r1
 c1c:	64 f5       	brge	.+88     	; 0xc76 <__pack_f+0x172>
 c1e:	fb 01       	movw	r30, r22
 c20:	e1 58       	subi	r30, 0x81	; 129
 c22:	ff 4f       	sbci	r31, 0xFF	; 255
 c24:	d8 01       	movw	r26, r16
 c26:	c7 01       	movw	r24, r14
 c28:	8f 77       	andi	r24, 0x7F	; 127
 c2a:	90 70       	andi	r25, 0x00	; 0
 c2c:	a0 70       	andi	r26, 0x00	; 0
 c2e:	b0 70       	andi	r27, 0x00	; 0
 c30:	80 34       	cpi	r24, 0x40	; 64
 c32:	91 05       	cpc	r25, r1
 c34:	a1 05       	cpc	r26, r1
 c36:	b1 05       	cpc	r27, r1
 c38:	39 f4       	brne	.+14     	; 0xc48 <__pack_f+0x144>
 c3a:	e7 fe       	sbrs	r14, 7
 c3c:	0d c0       	rjmp	.+26     	; 0xc58 <__pack_f+0x154>
 c3e:	80 e4       	ldi	r24, 0x40	; 64
 c40:	90 e0       	ldi	r25, 0x00	; 0
 c42:	a0 e0       	ldi	r26, 0x00	; 0
 c44:	b0 e0       	ldi	r27, 0x00	; 0
 c46:	04 c0       	rjmp	.+8      	; 0xc50 <__pack_f+0x14c>
 c48:	8f e3       	ldi	r24, 0x3F	; 63
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	a0 e0       	ldi	r26, 0x00	; 0
 c4e:	b0 e0       	ldi	r27, 0x00	; 0
 c50:	e8 0e       	add	r14, r24
 c52:	f9 1e       	adc	r15, r25
 c54:	0a 1f       	adc	r16, r26
 c56:	1b 1f       	adc	r17, r27
 c58:	17 ff       	sbrs	r17, 7
 c5a:	05 c0       	rjmp	.+10     	; 0xc66 <__pack_f+0x162>
 c5c:	16 95       	lsr	r17
 c5e:	07 95       	ror	r16
 c60:	f7 94       	ror	r15
 c62:	e7 94       	ror	r14
 c64:	31 96       	adiw	r30, 0x01	; 1
 c66:	87 e0       	ldi	r24, 0x07	; 7
 c68:	16 95       	lsr	r17
 c6a:	07 95       	ror	r16
 c6c:	f7 94       	ror	r15
 c6e:	e7 94       	ror	r14
 c70:	8a 95       	dec	r24
 c72:	d1 f7       	brne	.-12     	; 0xc68 <__pack_f+0x164>
 c74:	05 c0       	rjmp	.+10     	; 0xc80 <__pack_f+0x17c>
 c76:	ee 24       	eor	r14, r14
 c78:	ff 24       	eor	r15, r15
 c7a:	87 01       	movw	r16, r14
 c7c:	ef ef       	ldi	r30, 0xFF	; 255
 c7e:	f0 e0       	ldi	r31, 0x00	; 0
 c80:	6e 2f       	mov	r22, r30
 c82:	67 95       	ror	r22
 c84:	66 27       	eor	r22, r22
 c86:	67 95       	ror	r22
 c88:	90 2f       	mov	r25, r16
 c8a:	9f 77       	andi	r25, 0x7F	; 127
 c8c:	d7 94       	ror	r13
 c8e:	dd 24       	eor	r13, r13
 c90:	d7 94       	ror	r13
 c92:	8e 2f       	mov	r24, r30
 c94:	86 95       	lsr	r24
 c96:	49 2f       	mov	r20, r25
 c98:	46 2b       	or	r20, r22
 c9a:	58 2f       	mov	r21, r24
 c9c:	5d 29       	or	r21, r13
 c9e:	b7 01       	movw	r22, r14
 ca0:	ca 01       	movw	r24, r20
 ca2:	1f 91       	pop	r17
 ca4:	0f 91       	pop	r16
 ca6:	ff 90       	pop	r15
 ca8:	ef 90       	pop	r14
 caa:	df 90       	pop	r13
 cac:	08 95       	ret

00000cae <__unpack_f>:
 cae:	fc 01       	movw	r30, r24
 cb0:	db 01       	movw	r26, r22
 cb2:	40 81       	ld	r20, Z
 cb4:	51 81       	ldd	r21, Z+1	; 0x01
 cb6:	22 81       	ldd	r18, Z+2	; 0x02
 cb8:	62 2f       	mov	r22, r18
 cba:	6f 77       	andi	r22, 0x7F	; 127
 cbc:	70 e0       	ldi	r23, 0x00	; 0
 cbe:	22 1f       	adc	r18, r18
 cc0:	22 27       	eor	r18, r18
 cc2:	22 1f       	adc	r18, r18
 cc4:	93 81       	ldd	r25, Z+3	; 0x03
 cc6:	89 2f       	mov	r24, r25
 cc8:	88 0f       	add	r24, r24
 cca:	82 2b       	or	r24, r18
 ccc:	28 2f       	mov	r18, r24
 cce:	30 e0       	ldi	r19, 0x00	; 0
 cd0:	99 1f       	adc	r25, r25
 cd2:	99 27       	eor	r25, r25
 cd4:	99 1f       	adc	r25, r25
 cd6:	11 96       	adiw	r26, 0x01	; 1
 cd8:	9c 93       	st	X, r25
 cda:	11 97       	sbiw	r26, 0x01	; 1
 cdc:	21 15       	cp	r18, r1
 cde:	31 05       	cpc	r19, r1
 ce0:	a9 f5       	brne	.+106    	; 0xd4c <__unpack_f+0x9e>
 ce2:	41 15       	cp	r20, r1
 ce4:	51 05       	cpc	r21, r1
 ce6:	61 05       	cpc	r22, r1
 ce8:	71 05       	cpc	r23, r1
 cea:	11 f4       	brne	.+4      	; 0xcf0 <__unpack_f+0x42>
 cec:	82 e0       	ldi	r24, 0x02	; 2
 cee:	37 c0       	rjmp	.+110    	; 0xd5e <__unpack_f+0xb0>
 cf0:	82 e8       	ldi	r24, 0x82	; 130
 cf2:	9f ef       	ldi	r25, 0xFF	; 255
 cf4:	13 96       	adiw	r26, 0x03	; 3
 cf6:	9c 93       	st	X, r25
 cf8:	8e 93       	st	-X, r24
 cfa:	12 97       	sbiw	r26, 0x02	; 2
 cfc:	9a 01       	movw	r18, r20
 cfe:	ab 01       	movw	r20, r22
 d00:	67 e0       	ldi	r22, 0x07	; 7
 d02:	22 0f       	add	r18, r18
 d04:	33 1f       	adc	r19, r19
 d06:	44 1f       	adc	r20, r20
 d08:	55 1f       	adc	r21, r21
 d0a:	6a 95       	dec	r22
 d0c:	d1 f7       	brne	.-12     	; 0xd02 <__unpack_f+0x54>
 d0e:	83 e0       	ldi	r24, 0x03	; 3
 d10:	8c 93       	st	X, r24
 d12:	0d c0       	rjmp	.+26     	; 0xd2e <__unpack_f+0x80>
 d14:	22 0f       	add	r18, r18
 d16:	33 1f       	adc	r19, r19
 d18:	44 1f       	adc	r20, r20
 d1a:	55 1f       	adc	r21, r21
 d1c:	12 96       	adiw	r26, 0x02	; 2
 d1e:	8d 91       	ld	r24, X+
 d20:	9c 91       	ld	r25, X
 d22:	13 97       	sbiw	r26, 0x03	; 3
 d24:	01 97       	sbiw	r24, 0x01	; 1
 d26:	13 96       	adiw	r26, 0x03	; 3
 d28:	9c 93       	st	X, r25
 d2a:	8e 93       	st	-X, r24
 d2c:	12 97       	sbiw	r26, 0x02	; 2
 d2e:	20 30       	cpi	r18, 0x00	; 0
 d30:	80 e0       	ldi	r24, 0x00	; 0
 d32:	38 07       	cpc	r19, r24
 d34:	80 e0       	ldi	r24, 0x00	; 0
 d36:	48 07       	cpc	r20, r24
 d38:	80 e4       	ldi	r24, 0x40	; 64
 d3a:	58 07       	cpc	r21, r24
 d3c:	58 f3       	brcs	.-42     	; 0xd14 <__unpack_f+0x66>
 d3e:	14 96       	adiw	r26, 0x04	; 4
 d40:	2d 93       	st	X+, r18
 d42:	3d 93       	st	X+, r19
 d44:	4d 93       	st	X+, r20
 d46:	5c 93       	st	X, r21
 d48:	17 97       	sbiw	r26, 0x07	; 7
 d4a:	08 95       	ret
 d4c:	2f 3f       	cpi	r18, 0xFF	; 255
 d4e:	31 05       	cpc	r19, r1
 d50:	79 f4       	brne	.+30     	; 0xd70 <__unpack_f+0xc2>
 d52:	41 15       	cp	r20, r1
 d54:	51 05       	cpc	r21, r1
 d56:	61 05       	cpc	r22, r1
 d58:	71 05       	cpc	r23, r1
 d5a:	19 f4       	brne	.+6      	; 0xd62 <__unpack_f+0xb4>
 d5c:	84 e0       	ldi	r24, 0x04	; 4
 d5e:	8c 93       	st	X, r24
 d60:	08 95       	ret
 d62:	64 ff       	sbrs	r22, 4
 d64:	03 c0       	rjmp	.+6      	; 0xd6c <__unpack_f+0xbe>
 d66:	81 e0       	ldi	r24, 0x01	; 1
 d68:	8c 93       	st	X, r24
 d6a:	12 c0       	rjmp	.+36     	; 0xd90 <__unpack_f+0xe2>
 d6c:	1c 92       	st	X, r1
 d6e:	10 c0       	rjmp	.+32     	; 0xd90 <__unpack_f+0xe2>
 d70:	2f 57       	subi	r18, 0x7F	; 127
 d72:	30 40       	sbci	r19, 0x00	; 0
 d74:	13 96       	adiw	r26, 0x03	; 3
 d76:	3c 93       	st	X, r19
 d78:	2e 93       	st	-X, r18
 d7a:	12 97       	sbiw	r26, 0x02	; 2
 d7c:	83 e0       	ldi	r24, 0x03	; 3
 d7e:	8c 93       	st	X, r24
 d80:	87 e0       	ldi	r24, 0x07	; 7
 d82:	44 0f       	add	r20, r20
 d84:	55 1f       	adc	r21, r21
 d86:	66 1f       	adc	r22, r22
 d88:	77 1f       	adc	r23, r23
 d8a:	8a 95       	dec	r24
 d8c:	d1 f7       	brne	.-12     	; 0xd82 <__unpack_f+0xd4>
 d8e:	70 64       	ori	r23, 0x40	; 64
 d90:	14 96       	adiw	r26, 0x04	; 4
 d92:	4d 93       	st	X+, r20
 d94:	5d 93       	st	X+, r21
 d96:	6d 93       	st	X+, r22
 d98:	7c 93       	st	X, r23
 d9a:	17 97       	sbiw	r26, 0x07	; 7
 d9c:	08 95       	ret

00000d9e <__divmodhi4>:
 d9e:	97 fb       	bst	r25, 7
 da0:	09 2e       	mov	r0, r25
 da2:	07 26       	eor	r0, r23
 da4:	0a d0       	rcall	.+20     	; 0xdba <__divmodhi4_neg1>
 da6:	77 fd       	sbrc	r23, 7
 da8:	04 d0       	rcall	.+8      	; 0xdb2 <__divmodhi4_neg2>
 daa:	0c d0       	rcall	.+24     	; 0xdc4 <__udivmodhi4>
 dac:	06 d0       	rcall	.+12     	; 0xdba <__divmodhi4_neg1>
 dae:	00 20       	and	r0, r0
 db0:	1a f4       	brpl	.+6      	; 0xdb8 <__divmodhi4_exit>

00000db2 <__divmodhi4_neg2>:
 db2:	70 95       	com	r23
 db4:	61 95       	neg	r22
 db6:	7f 4f       	sbci	r23, 0xFF	; 255

00000db8 <__divmodhi4_exit>:
 db8:	08 95       	ret

00000dba <__divmodhi4_neg1>:
 dba:	f6 f7       	brtc	.-4      	; 0xdb8 <__divmodhi4_exit>
 dbc:	90 95       	com	r25
 dbe:	81 95       	neg	r24
 dc0:	9f 4f       	sbci	r25, 0xFF	; 255
 dc2:	08 95       	ret

00000dc4 <__udivmodhi4>:
 dc4:	aa 1b       	sub	r26, r26
 dc6:	bb 1b       	sub	r27, r27
 dc8:	51 e1       	ldi	r21, 0x11	; 17
 dca:	07 c0       	rjmp	.+14     	; 0xdda <__udivmodhi4_ep>

00000dcc <__udivmodhi4_loop>:
 dcc:	aa 1f       	adc	r26, r26
 dce:	bb 1f       	adc	r27, r27
 dd0:	a6 17       	cp	r26, r22
 dd2:	b7 07       	cpc	r27, r23
 dd4:	10 f0       	brcs	.+4      	; 0xdda <__udivmodhi4_ep>
 dd6:	a6 1b       	sub	r26, r22
 dd8:	b7 0b       	sbc	r27, r23

00000dda <__udivmodhi4_ep>:
 dda:	88 1f       	adc	r24, r24
 ddc:	99 1f       	adc	r25, r25
 dde:	5a 95       	dec	r21
 de0:	a9 f7       	brne	.-22     	; 0xdcc <__udivmodhi4_loop>
 de2:	80 95       	com	r24
 de4:	90 95       	com	r25
 de6:	bc 01       	movw	r22, r24
 de8:	cd 01       	movw	r24, r26
 dea:	08 95       	ret

00000dec <__prologue_saves__>:
 dec:	2f 92       	push	r2
 dee:	3f 92       	push	r3
 df0:	4f 92       	push	r4
 df2:	5f 92       	push	r5
 df4:	6f 92       	push	r6
 df6:	7f 92       	push	r7
 df8:	8f 92       	push	r8
 dfa:	9f 92       	push	r9
 dfc:	af 92       	push	r10
 dfe:	bf 92       	push	r11
 e00:	cf 92       	push	r12
 e02:	df 92       	push	r13
 e04:	ef 92       	push	r14
 e06:	ff 92       	push	r15
 e08:	0f 93       	push	r16
 e0a:	1f 93       	push	r17
 e0c:	cf 93       	push	r28
 e0e:	df 93       	push	r29
 e10:	cd b7       	in	r28, 0x3d	; 61
 e12:	de b7       	in	r29, 0x3e	; 62
 e14:	ca 1b       	sub	r28, r26
 e16:	db 0b       	sbc	r29, r27
 e18:	0f b6       	in	r0, 0x3f	; 63
 e1a:	f8 94       	cli
 e1c:	de bf       	out	0x3e, r29	; 62
 e1e:	0f be       	out	0x3f, r0	; 63
 e20:	cd bf       	out	0x3d, r28	; 61
 e22:	09 94       	ijmp

00000e24 <__epilogue_restores__>:
 e24:	2a 88       	ldd	r2, Y+18	; 0x12
 e26:	39 88       	ldd	r3, Y+17	; 0x11
 e28:	48 88       	ldd	r4, Y+16	; 0x10
 e2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 e2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 e2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 e30:	8c 84       	ldd	r8, Y+12	; 0x0c
 e32:	9b 84       	ldd	r9, Y+11	; 0x0b
 e34:	aa 84       	ldd	r10, Y+10	; 0x0a
 e36:	b9 84       	ldd	r11, Y+9	; 0x09
 e38:	c8 84       	ldd	r12, Y+8	; 0x08
 e3a:	df 80       	ldd	r13, Y+7	; 0x07
 e3c:	ee 80       	ldd	r14, Y+6	; 0x06
 e3e:	fd 80       	ldd	r15, Y+5	; 0x05
 e40:	0c 81       	ldd	r16, Y+4	; 0x04
 e42:	1b 81       	ldd	r17, Y+3	; 0x03
 e44:	aa 81       	ldd	r26, Y+2	; 0x02
 e46:	b9 81       	ldd	r27, Y+1	; 0x01
 e48:	ce 0f       	add	r28, r30
 e4a:	d1 1d       	adc	r29, r1
 e4c:	0f b6       	in	r0, 0x3f	; 63
 e4e:	f8 94       	cli
 e50:	de bf       	out	0x3e, r29	; 62
 e52:	0f be       	out	0x3f, r0	; 63
 e54:	cd bf       	out	0x3d, r28	; 61
 e56:	ed 01       	movw	r28, r26
 e58:	08 95       	ret

00000e5a <_exit>:
 e5a:	f8 94       	cli

00000e5c <__stop_program>:
 e5c:	ff cf       	rjmp	.-2      	; 0xe5c <__stop_program>
